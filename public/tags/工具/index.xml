<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>工具 on * IN SHADOW</title>
    <link>/tags/%E5%B7%A5%E5%85%B7/</link>
    <description>Recent content in 工具 on * IN SHADOW</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 16 Dec 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>docker上手 生产环境大搬家</title>
      <link>/post/docker/</link>
      <pubDate>Sun, 16 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/docker/</guid>
      <description>起因 帮 viktorika的项目 学习打包的时候，写了个脚本手抖把个目录给删了，不得不重装系统，经过深思熟虑之后决定做以下三件事
 拆分/home、/
 timeshift定期备份
 使用docker创建测试环境
  拆分目录 意外怀孕炸机头疼莫过于平时丢在/home/里杂乱的工作文件没有搜集起来（特别是多人用户机系统崩溃时），所以不如直接把根目录拆分出来（根治），如debian安装引导的时候说的“高级玩法”
至于在/etc下配置文件以及多平台同步生产环境等问题：
 [ ] dotfile repo of mine ： setup require
 [x] 多平台生产环境：Chromium+vscode setting sync就是我的生产力
  在重装系统的时候将原有的/dev/sdd3分割成40G跟175G
按照原先的顺序先挂根目录到/mnt，再创建/mnt/boot、/mnt/home。
原本是想/var跟/usr跟/opt也一起拆了的，后来感觉分太多也麻烦没必要，杂乱文件也很多，毕竟每次出问题只格/dev/sdd4一件重装软件效果体验更佳（只要家在就行）
TimeShift定期备份 用了一把梭打包TimeShift定期备份，还好系统不大，不然得活生生把根目录给吃掉
TimeShift支持快照迁移到心的电脑上，在恢复快照之前，TimeShift会询问你是不是需要保存现有的应用设置，并且选择保存哪一个。TimeShift需要GRUB 2启动进入快照恢复。
一分钟不到就备份好了，不过没有尝试做容灾测试（可不敢手贱再把目录删一次了）
部署本地docker  什么是docker
 为什么是docker
 docker的基本使用
  一来是不直接在现有的环境上动手，风险也不小。
二是有通用的测试平台，有标准衡量与足够的试错机会。
# 换国内阿里云源 sudo echo &#39;{&amp;quot;registry-mirrors&amp;quot;: [&amp;quot;https://dftbcros.mirror.aliyuncs.com&amp;quot;]}&#39;&amp;gt;&amp;gt;/etc/docker/daemon.json # 启动服务 sudo systemctl daemon-reload &amp;amp;&amp;amp; sudo systemctl enable docker --now # 获取镜像 sudo docker pull debian sudo docker pull ubuntu  由镜像创建实例：</description>
    </item>
    
    <item>
      <title>Google Calendar行程表 左手日記 右手咕咕</title>
      <link>/post/calendar/</link>
      <pubDate>Sun, 04 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/calendar/</guid>
      <description>緣起  與別人預約的事情越來越多，單純使用 Markdown 的 todolist 規模過於龐大，而且不支持自動排序，重複事件需要自檢，沒有提醒
 隨時隨地的同步、共享或公開自己的行程內容
 平時想做的事情記在todolist，過幾天就忘了。如果事情沒有被安排上行程，很可能過了熱情以後就不會再想做了，執行力折損。
  選擇  選擇谷歌的原因一大部分是個人歷史原因（駐留谷歌服務，以及新買了谷歌親兒子2自帶Calendar），在調整、創建方面相當簡潔，設計感到位。   另外一個就是谷歌的Keep Notes任務清單可以聯動，同時還擁有chrome extension 隨時隨地 mark 網頁。（不過貌似這塊環境發展緩慢，雖然對我目前來說就夠用了）   同時也推薦微軟體系的Microsoft Outlook（Windows User很推薦）、蘋果體系的Calendar，根據個人習慣以及環境進行選擇  通用簡介  通常都支持多日程表切換，可以根據需要定義如家庭、娛樂、公司等多個日程表，且允許導入其他人的行程表（詳見下文），支持在多維度上切換行程   大部分日程表都擁有完善的設置功能，可以附上地址、文件、鏈接、邀約，以及修改事件的色彩以便區分等。  谷歌特性  谷歌自帶了提醒與日程兩種（蘋果看起來僅提供日程），提醒不會佔用到行程時間，對外不會像日程一樣展示為繁忙狀態   谷歌默認提供簡單模板，也有相對複雜的配置（相對的另外兩個平台都默認提供複雜模板）
 快速同步：Google Calendar會在更改的時候回調同步，并在全平台更新日程表。
   在手機端還有另一個功能：適配時間安排，根據空餘時間安排你鍛煉、學習，以及打電話回家(Yes! It worked for me! )  共享  各種行程表都支持公開只讀共享。Google Calendar開放了多種共享方式（只讀），包括iframe嵌入、REST風格ical地址（公開或私密）、請求網址等多種方式
 各種calendar日程表都支持訂閱其他人的行程表（可以對公展示具體內容，或者顯示該階段有沒有空），不過對訂閱的行程表沒有
 iphone可以在設置 - 用戶與密碼 - 添加其他賬戶 - 添加已訂閱日程表</description>
    </item>
    
  </channel>
</rss>