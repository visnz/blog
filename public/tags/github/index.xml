<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Github on * IN SHADOW</title>
    <link>/tags/github/</link>
    <description>Recent content in Github on * IN SHADOW</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 05 Dec 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/github/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>VSCode記 Gists同步部署生產環境(Atom&amp;Vim)</title>
      <link>/post/gists/</link>
      <pubDate>Wed, 05 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/gists/</guid>
      <description>問題描述  擁有不止一個生產環境，而且這些生產環境也不一定持久的情況下（隨時有可能一鍵重裝、部署新機器），不同生產環境要求有相同的配置（同步需求）
 有隨時隨地看到好 extensions 就想 install 的壞習慣
 作為生產力工具，需要快速、自動化、可管理的部署以減少不必要損失（包括不限於擴展配置）
  解決 使用較為小型的私人代碼在線託管服務（大型網路里專門用於管理配置的配置服務器），將配置代碼上傳託管，按需獲取。有安全需求可自建機器與認證。
VSCode VSCode 中有一個提供 Setting Sync Anywhere 的擴展，使用 Github 提供的 Gists 服務，短代碼在線託管（允許版本管理）
Setting Sync 基本步驟如下：
 github里生成gist token（用於身份分離認證 複製保存好）
 vscode中使用setting sync擴展進行同步：upload，產生一個公開的以Username、gistID為依據的網頁（每次更新配置都會產生新的gistID，注意保存）
 獲取gist ID（可以在github gists 服務里找到URL最後一個便是），同步的時候使用gistID、token獲得
  詳細操作步驟參考
Atom Atom裏也有支持設置同步的sync-settings
apm install sync-setting
也需要提供gist token 不過需要自己手動在gists上創建一個gist
將gistID在設置中設置
vim vim方面寫了個js腳本來完成下載 上傳就懶得寫了直接webpage edit一下得了（懶
const https=require(&amp;quot;https&amp;quot;) const fs = require(&#39;fs&#39;); const gistID=&amp;quot;------------------------------------&amp;quot; const remoteFilename=&amp;quot;--------------&amp;quot; const filepath=&amp;quot;------------------------&amp;quot; download(gistID,remoteFilename,filepath) //提供指定gistID，遠程文件名（嗯目前只支持了一個），以及保存的地方 function download(gistID,remoteFilename,filepath){ //調用github api，獲取指定gist的相關信息 //需要附上headers https.</description>
    </item>
    
  </channel>
</rss>