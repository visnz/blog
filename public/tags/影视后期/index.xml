<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>影视后期 on * IN SHADOW</title>
    <link>/tags/%E5%BD%B1%E8%A7%86%E5%90%8E%E6%9C%9F/</link>
    <description>Recent content in 影视后期 on * IN SHADOW</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 21 May 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/%E5%BD%B1%E8%A7%86%E5%90%8E%E6%9C%9F/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>FFmpeg&#43;AnotherGUI实现Windows上进行ProRes 422编码</title>
      <link>/post/preres_in_windows/</link>
      <pubDate>Mon, 21 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/preres_in_windows/</guid>
      <description> 方法来源 How to Export Apple Pro Res on a PC Using Windows
材料  FFmpeg（github地址）。官方提供了静态版（Static，无动态链接库）、共享库版（Shared）、构建版（Dev，一堆头文件）。此处下载Static或Shared版本
 AnotherGUI是一个编码器前端（高效并行处理），支持大量转码工作管理和调度。
 一个基于H.264编码的视频，格式MOV、MP4等皆可
  基本原理 把已经渲染好的基于H.264编码的视频，通过FFmpeg进行转码。AnotherGUI是一个图形界面操作者，协同管理和调度。
过程  FFmpeg解压，执行文件ffmpeg.exe在/bin中  AnotherGUI安装也是一把梭，画面简洁明了，常用英语  AnotherGUI有指定FFmpeg，会在Path下寻找（但官方没找到Setup for Windows，会找不到），可以直接在Executables里重定向： （注：第一次打开默认Path都是空白的，上图为过程演示）
 转码模式选择  添加源文件（可直接拖拽），并在右边的输出文件夹选择  Go  输出文件   直接用QQ影音（自我反省）打开听到一大堆撕裂声音，直接用QuickTime打开 结尾 貌似没有找到直接进行ProRes Encode in PC的方法…？（这就是FCP存在的理由吗？）
更多  DaVinci Resolve 穷人低配虚拟工作台
 pr素材代理 =&amp;gt; 大素材打包分发剪辑 &amp;amp;&amp;amp; 高计算量剪辑
  </description>
    </item>
    
    <item>
      <title>TinyPNG初体验</title>
      <link>/post/tinypng/</link>
      <pubDate>Thu, 06 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/tinypng/</guid>
      <description>背景 学习“数字图像处理”了解到使用TinyPNG对图片进行压缩，压缩比率能到50%以上
TinyPNG TinyPNG只是众多png压缩算法中的一种，相对优秀的还有pngquant/pngout 通过取出元数据、将RGB24位色压缩到索引8位色实现尽可能大的色彩保留 产品本身提供在线API、在线使用、以及TinyPNG可以作为PS插件整合等，相对灵活 测试 产品定位本身用于压缩较小的PNG图像（原理上建立索引颜色，通常不会用于处理复杂色彩图像）
用于图标等简单图案，TinyPNG压缩可以在肉眼较难感知情况下尽可能压缩 对于摄影作品的压缩就遇见比较大的问题 第一幅图的压缩率接近39%，第二幅图接近61% 跟画面内容跟画面信息都有关系（仅为单次测试，平均表现详见上面表格）
根据索引的原理压缩黑白图像可以尽可能多保存信息内容 摄影作品转换黑白后，用其压缩能得到不错的还原及大小压缩效果（38%） 简单结论 TinyPNG适合：
 图标、头像等压缩，降低软件安装包大小、加快网页交付
 摄影作品黑白图像的高质量、小空间存储（有损压缩）
 不适合色彩复杂的摄影作品存储
  扩展 python自动化批量处理TinyPNG脚本
官网提供在线压缩尝试
QQ音乐技术团队对PNG图片压缩的分析
附件：TinyPNG插件 for PS</description>
    </item>
    
    <item>
      <title>修正 达芬奇xml剪辑表 素材出入点错误</title>
      <link>/post/dvc-xml-fix/</link>
      <pubDate>Mon, 03 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/dvc-xml-fix/</guid>
      <description>背景 因为一些原因 需要将一段素材进行场景变换侦测（根据镜头切换，切割视频），然后转换成剪辑表跟素材，进行下一步的操作。在输出剪辑表的时候，发生了“剪切时间点正确，但素材出入点错误”的尴尬局面。
场景侦测 达芬奇提供场景侦测自动分切的功能：
图片一目了然，根据画面变化率进行分辨对视频进行逆向分析（所以一些渐变效果需要自己手动调整右边的时间切段）
下面的紫色的线条可以上下拖动调整变化率敏感度
将分切好的素材全选生成一个对应序列，在剪辑板块直接导出XML文件（因为需要跟pr接驳，直接用了标准XML）
问题 通常来说输出的剪辑表应该是这样的：
AB,C,DEF,GH,I
结果在PR中读取是这样的：
AB,A,ABC,AB,A
即：剪辑点是对的，但素材的起始点不对，全部回到素材的起始点了
分析  直接一个一个改治标不治本
 直接用达芬奇渲染分段素材，又担心二次渲染对素材造成影响，以及无缘无故浪费机器性能
 直接拆剪辑表，把素材的出入点进行修改
  实操 剪辑表的格式是普通的xml格式，用一些在线阅读器可以更明朗地观看：
而其中出现问题的就在每一个素材剪辑段的标签内：
要做的就是筛选出指定标签里的剪辑点同步到素材出入点上
nodejs代码：
var fs = require(&amp;quot;fs&amp;quot;); var xml2js = require(&#39;xml2js&#39;); var parser = new xml2js.Parser();//用于解析xml为json对象 var builder = new xml2js.Builder(); fs.readFile(process.argv.slice(2)[0], &amp;quot;utf-8&amp;quot;, function(err,data){ if (err) {console.log(&amp;quot;读取文件失败&amp;quot;); throw err;} parser.parseString(data, function(err,res){ if(err) throw err; var medialist=res.xmeml.sequence[0].media[0]//获取media列表 var vlist=medialist.video[0].track[0].clipitem var alist=medialist.audio[0].track[0].clipitem for(clip of vlist){ clip.in[0]=clip.start[0] clip.</description>
    </item>
    
    <item>
      <title>flv/mkv文件提取pr可导入格式</title>
      <link>/post/flvnmkv2mp4/</link>
      <pubDate>Thu, 09 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/flvnmkv2mp4/</guid>
      <description>背景 屡次被问flv跟mkv格式为什么不能导入pr，以及如何解决。
FLV 早期视频导入flash后导出swf体积庞大，flv（Flash Video）格式早期产生用于解决这个问题。flv是flash文件作为外壳保护（封装）视频，并转换成串流格式。
同时：
 外壳可以保护原视频内容、版权等
 串流媒体传输支持在网络上进行点播（视频点播网站常用，现在逐渐被H5取代）
 视频多用h.264编码，音频多用acc或mp3，但是有一层外壳，可以直接提取
 pr并不是没办法导入flv，只要有相应编解码器就可以导入（早期pr能解H.263，可以导入早期flv视频）pr用的编解码器体系参见AME，导入不了大多是flv的封装格式AME非能解
  解决办法：
 直接对flv文件进行去外壳+重新封装（小丸工具箱-封装，flv进去mp4出来最暴力）
 抽出视频（含外壳）+抽出音频，再手动封装
  （支持批量）
MKV mkv（Matroska格式的一种）提供容器格式，用于存放多条视频、多条音频、多份字幕等，同时也支持串流媒体传输，支持选单（像DVD一样）
不能拉入pr的原因是包含多个黏在一起的视频、音频、字幕等，而无法作为一个单独的素材导入，故需要提取
小丸工具箱自带抽取工具（以及第三方抽取工具） 同时在封装版面也提供了mkv封装
硕鼠flv下载器 硕鼠也提供了bilibili专门的下载器（能突破限速，这个还是蛮实用的）
同时可以安装上“硕鼠转换”，可以直接转换flv到mp4（暂无mov？），不过没有参数可调，而且压缩得很惨
(最后89M被压剩14M)
另外在bilibili大视频会分片，以及番剧没办法在“kanbilibli”直接找到（可以去kanbilibili上搜索，依然可以找到），硕鼠可以直接根据番剧地址下载
同时提供了“硕鼠合并”，可以直接只能拼合（不会删除原分片）</description>
    </item>
    
    <item>
      <title>DaVinci/Fusion 节点式效果软件初体验:Tracker跟踪效果</title>
      <link>/post/davinci-track/</link>
      <pubDate>Sun, 03 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/davinci-track/</guid>
      <description>背景 （Adobe用户习惯剥离计划进行中）
因为最新的Davinci15把BlackMagic自家的Fusion内置了，现在基本集素材整理、剪辑、特效、调色、调音和渲染于一身，效果在达芬奇里面做也是方便点的。借这个机会尝试一下节点式效果工具
达芬奇15中的Fusion页面
素材与需求 （其实是过段时间bdf制作希望高点逼格）素材是多人出入场的舞蹈，将人物的名字附加到舞蹈者的运动趋势上
于是随机找了一段电脑里带有运动趋势的素材和一个白条做尝试
视频素材
图片素材 结果视频： BDF2018宣传片 after 1:20
操作 导入两部分素材，在时间线上部署底层素材 直接切换到fusion工作台 节点式主要是以清晰明朗的效果器结构与关系来展示复杂的效果逻辑，这一点比ae在层级控制上有更多的灵活性 图中为节点面板，左边是媒体素材，右边是媒体的输出，要做的就是在这两个节点之间添加效果器
为输入素材添加跟踪器，并添加节点进行跟踪，跟踪……素材里的女孩的蝴蝶结 下面是添加中间节点的效果器 中间是跟踪结果 右上角向右跟踪
添加人名条并将其运动轨迹指定为跟踪器的分析结果 左下角将新素材连接到跟踪器 右边切换到跟踪模式，切换到匹配移动(match move)模式，则结果会出现人名条已经被附加到跟踪器的轨迹上
修改人名条的相对位置匹配到指定点上 简单的节点效果制作就完成了，切换回剪辑模式即可继续剪辑。因为效果是基于素材的，在剪辑里没有额外增加新的素材，整个工程更加简洁明了（pr和ae你们自己反思反思） 结尾  视频效果
 提供了更灵活的调节工具（当然需要你的硬件）
 提供了更清晰明朗的工程结构
 最最重要的是，它可以在交付里重新生成片段xml，自定义帧余量渲染套底，整个回批的素材包只包括必须素材的必须片段，会小很多很多！
  前排抱走诸君的老婆</description>
    </item>
    
    <item>
      <title>DaVinci Resolve 穷人低配虚拟工作台</title>
      <link>/post/davinciresolve/</link>
      <pubDate>Sun, 25 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/davinciresolve/</guid>
      <description>世界级调色软件Blackmagic公司出品的Davinci，做后期调色的时候通常有软硬件套装，软件是DaVinci Resolve[ Studio]，硬件部分如下图：
（大概几十万吧）
当然，硬件调色台不是必须的，（由于穷（其实是装逼））细节辅助调节等小需求基于折腾地去尝试了一下
实现效果视频
 iPad上安装element-Vs，打开后需要和主机进行连接（主从式WiFi首选，pc上开wifi）
 pc上键映射工具：Tangent 官网，记得Application Support选其中达芬奇的版本（其实就是一些初始化配置而已，可手动）
 在达芬奇里打开控制台（偏好设置-&amp;gt;调色台-&amp;gt;Tangent Devices Element）
  请尽情使用装逼 Tangent还支持adobe的pr/sg等其他一系列（疑似）后期制作工具的键映射</description>
    </item>
    
    <item>
      <title>pr素材代理 =&gt; 大素材打包分发剪辑 &amp;&amp; 高计算量剪辑</title>
      <link>/post/video-proxy/</link>
      <pubDate>Tue, 13 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/video-proxy/</guid>
      <description>后期剪辑可能会遇到以下问题
 素材量巨大或有高解析如4K素材，电脑太烂带不动 需要把视频交付给别人去剪辑，素材很多很大，上传网速太慢  使用pr自带的自动代理功能可以有效解决
基本思路是，把巨大的素材转换成一个小的，可以完成基础剪辑、音频校验等工作的视频素材，以降低CPU在解析素材的时间和硬盘使用率，从而提高处理速度。缺点在于对画面细节丢失精度，比如在稳定器的计算等等。
当需要别人参与剪辑的时候，只需要将代理文件打包好，交付给对方即可。
笔者使用pr版本提供两种代理手段：
 手动 创建代理或链接已有代理  收录时 自动 创建代理（下文介绍）
  代理素材实现高计算量剪辑 首先自然要把素材归类到一个文件夹中，并在旁边新建一个pr工程
在收录设置中，选择创建代理。当然目录建议是放在同一个文件夹，我新建了一个“素材代理”
其中的预设建议使用GoPro的方案，体积相对H.264较大，该编码专门针对视频中间代理文件，较大程度保留精度。若没有 稳定、变速光流法 等需要高精度计算的精剪效果的话，建议使用H.264，或者您可以导入其他预设。
通常到这里应该有三个项目了，这个时候可以将素材文件夹的素材导入pr中，pr收录会自动启动AME(Adobe Media Encoder)，并进行转码和代理连接
如果收录设置有修改见下图
到这里基本完成了素材的代理生成，现在要让我们的pr工程启用代理
在素材查看器(源)和节目预览(节目)中把切换代理按钮拉下来，分别启动素材代理。可以看到素材被替换为一个左右两边有两条小黑边的代理素材，则为启动了素材代理。
代理素材+工程打包分发 导入+渲染完所有代理素材后，想要把代理素材全部打包交付给(比如手下或外包团队)去做的话
首先解除原素材和代理素材之间的关系
选中所有原素材，设为脱机（我是直接归类成一个文件夹）
如图描述，如果是工作分发，自己按理要保留文件，第二项会删除源文件，看自己需要做选择
这时候就可以准备打包了，如图↑选择项目管理（打开之前请先创建一条空序列，打包需求）
随便创建了一个空序列，打包是按序列来打的
右边记得勾选打包未使用素材，否则是空包。新建工程没有预览文件，路径自定义，下面的估计磁盘空间请按素材代理的总大小来计算（“素材代理”文件夹大小），请确保磁盘上有足够空间进行打包
可以看到打包之后就只有代理素材和工程文件了，打开照样可以进行剪辑工作
回链接素材+渲染  代理的素材会在渲染时候默认替换回原来的素材，可以直接渲染
 分发返回的剪辑工作，需要重新连接原素材，再读第一点。
  修订补充 据随机测试，Gopro预设把文件压缩到大约六分之一到三分之一，H.264大约压缩到十二分之一
因为素材多种且码率参数各有不同，数据仅做概率参考
（抠鼻）反正可以手动创建预设</description>
    </item>
    
    <item>
      <title>后期字幕制作踩过的坑和比较推荐的做法</title>
      <link>/post/%E5%AD%97%E5%B9%95/</link>
      <pubDate>Sun, 18 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/%E5%AD%97%E5%B9%95/</guid>
      <description>简单列一下之前自己在制作视频字幕踩过的坑：
 不要使用旧版本AdobePR制作字幕（在PR中，早期的“字幕”和“标题”还是同一个东西的版本）
 尽量避免使用过于生僻的字，如果使用图像作为字幕，可以使用拼接。
  比较推荐的一些做法：
 aegisub制作ass字幕+小丸压制
 使用PS批量导出PSD作为字幕素材（个人比较常用）
  还未尝试的一些做法：
 PR字幕+调整图层
 Arc-Time在线字幕制作
  aegisub制作ass字幕+小丸压制 思路：创建一个包含样式、时间点和台词的字幕文件，只需要粗剪辑即可分工制作，适合台词量大的视频。
 制作：非常方便
 修改：方便
 上手：较难（需要简单看得懂开发文档为优）
  此处摘抄炮姐第一季第一集ass字幕文件（脚本文件）：(其中分号为官方脚本备注，井号为我自己添加的解释备注)
[Script Info] ##这一块指明了这个脚本的详细信息，直接英译中即可 ; Script generated by Aegisub 3.0.2 ; http://www.aegisub.org/ ; // 此字幕由PopSub生成 2014-03-15 17:24:20 ; // 版本: 0.77 ; // popgo_fansub@yahoo.co.jp ; // 欢迎访问漫游天下 http://bbs.popgo.net Title:漫游字幕 Original Script:漫游字幕组 Synch Point:0 ##指明时间偏移量 ScriptType:v4.00+ ##指明脚本版本，通常是4.00+ Collisions:Normal PlayResX:1280 ##指明字幕的渲染的位置 PlayResY:720 Timer:100.</description>
    </item>
    
  </channel>
</rss>