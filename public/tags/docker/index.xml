<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on * IN SHADOW</title>
    <link>/tags/docker/</link>
    <description>Recent content in Docker on * IN SHADOW</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 16 Dec 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>docker上手 生产环境大搬家</title>
      <link>/post/docker/</link>
      <pubDate>Sun, 16 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/docker/</guid>
      <description>起因 帮 viktorika的项目 学习打包的时候，写了个脚本手抖把个目录给删了，不得不重装系统，经过深思熟虑之后决定做以下三件事
 拆分/home、/
 timeshift定期备份
 使用docker创建测试环境
  拆分目录 意外怀孕炸机头疼莫过于平时丢在/home/里杂乱的工作文件没有搜集起来（特别是多人用户机系统崩溃时），所以不如直接把根目录拆分出来（根治），如debian安装引导的时候说的“高级玩法”
至于在/etc下配置文件以及多平台同步生产环境等问题：
 [ ] dotfile repo of mine ： setup require
 [x] 多平台生产环境：Chromium+vscode setting sync就是我的生产力
  在重装系统的时候将原有的/dev/sdd3分割成40G跟175G
按照原先的顺序先挂根目录到/mnt，再创建/mnt/boot、/mnt/home。
原本是想/var跟/usr跟/opt也一起拆了的，后来感觉分太多也麻烦没必要，杂乱文件也很多，毕竟每次出问题只格/dev/sdd4一件重装软件效果体验更佳（只要家在就行）
TimeShift定期备份 用了一把梭打包TimeShift定期备份，还好系统不大，不然得活生生把根目录给吃掉
TimeShift支持快照迁移到心的电脑上，在恢复快照之前，TimeShift会询问你是不是需要保存现有的应用设置，并且选择保存哪一个。TimeShift需要GRUB 2启动进入快照恢复。
一分钟不到就备份好了，不过没有尝试做容灾测试（可不敢手贱再把目录删一次了）
部署本地docker  什么是docker
 为什么是docker
 docker的基本使用
  一来是不直接在现有的环境上动手，风险也不小。
二是有通用的测试平台，有标准衡量与足够的试错机会。
# 换国内阿里云源 sudo echo &#39;{&amp;quot;registry-mirrors&amp;quot;: [&amp;quot;https://dftbcros.mirror.aliyuncs.com&amp;quot;]}&#39;&amp;gt;&amp;gt;/etc/docker/daemon.json # 启动服务 sudo systemctl daemon-reload &amp;amp;&amp;amp; sudo systemctl enable docker --now # 获取镜像 sudo docker pull debian sudo docker pull ubuntu  由镜像创建实例：</description>
    </item>
    
  </channel>
</rss>